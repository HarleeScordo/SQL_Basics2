## Admin privelages 

SELECT * FROM dba_sys_privs WHERE grantee = 'SYSTEM';

BEGIN
DBMS_RESOURCE_MANAGER_PRIVS.GRANT_SYSTEM_PRIVILEGE (
GRANTEE_NAME => 'SYSTEM', ADMIN_OPTION => FALSE);
END;
/


SELECT * FROM dba_sys_privs WHERE grantee = 'SYSTEM';


BEGIN
DBMS_RESOURCE_MANAGER_PRIVS.REVOKE_SYSTEM_PRIVILEGE (
REVOKEE_NAME => 'SYSTEM');
END;
/


SELECT * FROM dba_sys_privs WHERE grantee = 'SYSTEM';


GRANT ADMINISTER RESOURCE MANAGER TO SYSTEM;

SELECT * FROM dba_sys_privs WHERE grantee = 'SYSTEM';

REVOKE ADMINISTER RESOURCE MANAGER FROM SYSTEM;


SELECT * FROM dba_sys_privs WHERE grantee = 'SYSTEM';


## Resource Consumer Group

BEGIN
dbms_resource_manager.create_pending_area ();
END;
/
BEGIN
DBMS_RESOURCE_MANAGER.SET_CONSUMER_GROUP_MAPPING (
attribute => 'ORACLE_USER',
value => 'aval',
consumer_group => 'ETL_GROUP');
END;
/


BEGIN
DBMS_RESOURCE_MANAGER.SET_CONSUMER_GROUP_MAPPING_PRI (
explicit 		=>	1,
oracle_user 	=>	2,
service_name 	=>	3,
client_os_user 	=>	4,
client_program 	=>	5,
client_machine 	=>	6,
module_name 	=>	7,
module_name_action=> 	8,
service_module 	=>	9,
service_module_action=> 10);
END;
/


## Switching consumer Groups

BEGIN
DBMS_RESOURCE_MANAGER_PRIVS.GRANT_SWITCH_CONSUMER_GROUP (
Grantee_name => 'SYSTEM', consumer_group => 'BATCH_GROUP', grant_option => TRUE); DBMS_RESOURCE_MANAGER_PRIVS.REVOKE_SWITCH_CONSUMER_GROUP (
revokee_name => 'SYSTEM', consumer_group => 'BATCH_GROUP');
END;
/


## Creating simple resourcce plans

BEGIN
DBMS_RESOURCE_MANAGER.CREATE_SIMPLE_PLAN (
SIMPLE_PLAN => 'SIMPLEPLANDEMO',
CONSUMER_GROUP1 => 'GROUP1_demo', GROUP1_PERCENT => 40, CONSUMER_GROUP2 => 'GROUP2_demo', GROUP2_PERCENT => 60);
END;
/


## Pending Area

Exec DBMS_RESOURCE_MANAGER.CREATE_PENDING_AREA ();

Exec DBMS_RESOURCE_MANAGER.VALIDATE_PENDING_AREA ();

Exec DBMS_RESOURCE_MANAGER.SUBMIT_PENDING_AREA ();

Exec DBMS_RESOURCE_MANAGER.CLEAR_PENDING_AREA ();


## Creating Resource Consumer Groups

CREATE USER bdemo IDENTIFIED BY bdemo;
CREATE USER cdemo IDENTIFIED BY cdemo;
GRANT connect, resource TO bdemo, cdemo;
BEGIN
DBMS_RESOURCE_MANAGER_PRIVS.GRANT_SYSTEM_PRIVILEGE (
GRANTEE_NAME => 'cdemo', ADMIN_OPTION => FALSE); DBMS_RESOURCE_MANAGER_PRIVS.GRANT_SYSTEM_PRIVILEGE
(GRANTEE_NAME => 'bdemo', ADMIN_OPTION => FALSE);
END;
/


BEGIN
DBMS_RESOURCE_MANAGER.CLEAR_PENDING_AREA (); DBMS_RESOURCE_MANAGER.CREATE_PENDING_AREA (); DBMS_RESOURCE_MANAGER.CREATE_CONSUMER_GROUP (
consumer_group => 'OLTP_demo'); DBMS_RESOURCE_MANAGER.VALIDATE_PENDING_AREA (); DBMS_RESOURCE_MANAGER.SUBMIT_PENDING_AREA ();
END;
/


BEGIN
DBMS_RESOURCE_MANAGER.CLEAR_PENDING_AREA (); DBMS_RESOURCE_MANAGER.CREATE_PENDING_AREA (); DBMS_RESOURCE_MANAGER_PRIVS.GRANT_SWITCH_CONSUMER_GROUP (
'cdemo', 'OLTP_demo', false); DBMS_RESOURCE_MANAGER_PRIVS.GRANT_SWITCH_CONSUMER_GROUP (
'bdemo', 'OLTP_demo', false); DBMS_RESOURCE_MANAGER.SET_INITIAL_CONSUMER_GROUP (
'cdemo', 'OLTP_demo');
DBMS_RESOURCE_MANAGER.SET_INITIAL _CONSUMER_GROUP (
'bdemo', 'OLTP_demo');
DBMS_RESOURCE_MANAGER.VALIDATE_PENDING_AREA (); DBMS_RESOURCE_MANAGER.SUBMIT_PENDING_AREA ();
END;
/


## Creating Complex Resource Plans

BEGIN
dbms_resource_manager.clear_pending_area (); 
dbms_resource_manager.create_pending_area (); 
dbms_resource_manager.create_plan (plan=>'OLTP_plan');
dbms_resource_manager.create_plan_directive (plan => 'OLTP_PLAN’, group_or_subplan => 'OTHER_GROUPS',
comment => 'Plan Directive OLTP group'); dbms_resource_manager.create_plan_directive (plan => 'OLTP_PLAN’, group_or_subplan => 'SYS_GROUP',
comment => 'Plan Directive SYS group'); dbms_resource_manager.validate_pending_area (); dbms_resource_manager.submit_pending_area ();
END;
/


## Update and Delete Resources

BEGIN
DBMS_RESOURCE_MANAGER.CLEAR_PENDING_AREA ();
DBMS_RESOURCE_MANAGER.CREATE_PENDING_AREA();
DBMS_RESOURCE_MANAGER.CREATE_PLAN (
PLAN => 'plan_demo', Comment=>'test plan demo');
DBMS_RESOURCE_MANAGER.CREATE_CONSUMER_GROUP (
consumer_group =>'GROUPS1', comment=>'Initial group');
DBMS_RESOURCE_MANAGER.CREATE_PLAN_DIRECTIVE (
PLAN             => 'plan_demo',
GROUP_OR_SUBPLAN => 'GROUPS1',
COMMENT      => 'Initial Group Plan Directive demo');
DBMS_RESOURCE_MANAGER.CREATE_PLAN_DIRECTIVE (
PLAN              => 'plan_demo',
GROUP_OR_SUBPLAN => 'OTHER_GROUPS',
COMMENT      => 'Plan Directive demo');
DBMS_RESOURCE_MANAGER.VALIDATE_PENDING_AREA();
DBMS_RESOURCE_MANAGER.SUBMIT_PENDING_AREA();
END;
/


BEGIN
DBMS_RESOURCE_MANAGER.CLEAR_PENDING_AREA();
DBMS_RESOURCE_MANAGER.CREATE_PENDING_AREA();
DBMS_RESOURCE_MANAGER.UPDATE_PLAN_DIRECTIVE (
PLAN             => 'plan_demo',
GROUP_OR_SUBPLAN => 'OTHER_GROUPS',
NEW_COMMENT      => 'Higher priority');
DBMS_RESOURCE_MANAGER.VALIDATE_PENDING_AREA();
DBMS_RESOURCE_MANAGER.SUBMIT_PENDING_AREA();
END;
/


BEGIN
DBMS_RESOURCE_MANAGER.CLEAR_PENDING_AREA();
DBMS_RESOURCE_MANAGER.CREATE_PENDING_AREA();
DBMS_RESOURCE_MANAGER.DELETE_PLAN_DIRECTIVE
(
plan       =>'plan_demo',
group_or_subplan =>'GROUPS1'
);
DBMS_RESOURCE_MANAGER.VALIDATE_PENDING_AREA();
DBMS_RESOURCE_MANAGER.SUBMIT_PENDING_AREA();
END;
/


BEGIN
DBMS_RESOURCE_MANAGER.CLEAR_PENDING_AREA ();
DBMS_RESOURCE_MANAGER.CREATE_PENDING_AREA ();
DBMS_RESOURCE_MANAGER.UPDATE_PLAN (
PLAN => 'DAYTIME_PLAN',
NEW_COMMENT => 'Plan Updated');
DBMS_RESOURCE_MANAGER.SUBMIT_PENDING_AREA ();
END;
/


BEGIN
DBMS_RESOURCE_MANAGER.CLEAR_PENDING_AREA ();
DBMS_RESOURCE_MANAGER.CREATE_PENDING_AREA ();
DBMS_RESOURCE_MANAGER.DELETE_PLAN (plan => 'DAYTIME_PLAN');
DBMS_RESOURCE_MANAGER.SUBMIT_PENDING_AREA ();
END;
/



BEGIN
DBMS_RESOURCE_MANAGER.CLEAR_PENDING_AREA ();
DBMS_RESOURCE_MANAGER.CREATE_PENDING_AREA ();
DBMS_RESOURCE_MANAGER.DELETE_PLAN_CASCADE (plan => 'Cascade_Plan');
DBMS_RESOURCE_MANAGER.SUBMIT_PENDING_AREA ();
END;
/



## Update and Delete Consumer Groups

Begin
DBMS_RESOURCE_MANAGER.CLEAR_PENDING_AREA ();
DBMS_RESOURCE_MANAGER.CREATE_PENDING_AREA ();
DBMS_RESOURCE_MANAGER.UPDATE_CONSUMER_GROUP (
consumer_group  => 'consumer_group_demo',
new_comment => 'UPDATED consumer group');
DBMS_RESOURCE_MANAGER.SUBMIT_PENDING_AREA ();
END;
/


Begin
DBMS_RESOURCE_MANAGER.CLEAR_PENDING_AREA ();
DBMS_RESOURCE_MANAGER.CREATE_PENDING_AREA ();
DBMS_RESOURCE_MANAGER.DELETE_CONSUMER_GROUP (
consumer_group => 'consumer_group_demo'); DBMS_RESOURCE_MANAGER.SUBMIT_PENDING_AREA ();
END;
/


### Monitor the Resource Manager

SELECT table_name FROM dictionary
WHERE table_name LIKE 'DBA_RSRC%' ORDER BY 1;


SELECT plan, status FROM DBA_RSRC_PLANS ORDER BY plan;


SELECT distinct plan FROM DBA_RSRC_PLAN_DIRECTIVES ORDER BY plan;


SELECT consumer_group, status FROM DBA_RSRC_CONSUMER_GROUPS
ORDER By consumer_group;


